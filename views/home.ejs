<!doctype html>
<html lang="en">
<%- include("partials/header.ejs") %>
<%- include("partials/nav.ejs") %>

<body>
<div class="container">
    <%
    let buttons = [`<a class="d-inline-block float-right mr-1" data-toggle="modal" href="#joinClass">Enroll
                    in a course</a>`]
    %>
    <%- include("partials/title.ejs", {title: "Dashboard", subtitle: (courses.length === 0) ? "You are not enrolled in any classes." : `You are enrolled in ${courses.length} class${(courses.length === 1) ? "" : "es"}.`, buttons: buttons}) %>
    <div class="row">
        <div class="col-12">
            <div class="card-title">Assignments</div>
            <div class="card-subtitle">Includes unassigned and assigned assignments.</div>
            <div class="table-responsive">
                <table class="table ">
                    <thead>
                    <tr>
                        <th scope="col">Assignment</th>
                        <th scope="col">Course</th>
                        <th scope="col">Due Date</th>
                        <th scope="col">Cutoff</th>
                        <th scope="col">Attempts</th>
                        <th scope="col" style="width: 1em;">Options</th>
                    </tr>
                    </thead>
                    <tbody>
                    <% courses.forEach(course => {
                        let assignments = course.assignments.filter((assignment) => assignment.assigned && (new Date(assignment.late) - new Date()) > 0);
                    assignments.forEach(assignment => {
                        let attempts = assignment.responses.filter(response => response.student._id.toString() == user._id.toString())
                    %>
                    <tr>
                        <td><strong><%= assignment.name %></strong></td>
                        <td><%= course.name %>.<%= course.section %></td>
                        <td><%= new Date(assignment.duedate).toLocaleDateString() %>
                            - <%= timeTill(new Date(assignment.duedate)) %>

                        </td>
                        <td><%= new Date(assignment.late).toLocaleDateString() %>
                            - <%= timeTill(new Date(assignment.late)) %>
                        </td>
                        <td style="max-width: 20vw;">
                            <div class="">
                                <% let set = attempts.map(attempt => {
                                    let index = attempts.findIndex(attempt_ => attempt_ == attempt) + 1;
                                    let name = `Attempt ${(index <= 9) ? "0" : ""}${index}`;
                                    return `<a href="/response/${attempt._id}" class="text-${(attempt.passed) ? 'success' : (attempt.signal === "SIGTERM") ? 'warning' : 'danger'}">${name}</a>`
                                });
                                %>
                                <%- set.join(", ") %>
                            </div>
                        </td>
                        <td><a href="/submit/<%= assignment._id %>" class="">Submit</a></td>
                        <% }); %>
                        <% }); if(courses.length === 0){ %>
                            <td>You have no classes.</td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        <% } %>
                    </tr>
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</div>
</body>
<div id="joinClass" class="modal fade">
    <div class="modal-dialog modal-login">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Join Course</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <form action="/" method="post">
                <div class="modal-body">
                    <div class="input-group input-group">
                        <input type="text" class="form-control" name="code" aria-label="Large"
                               aria-describedby="inputGroup-sizing-sm" placeholder="Course Code">
                        <div class="input-group-append">
                            <input type="submit" class="btn btn-primary pull-right" value="Enroll">
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<%- include("partials/footer.ejs") %>
</html>

<%
function timeTill(date) {

    var seconds = Math.floor((date - new Date()) / 1000);

    var interval = Math.floor(seconds / 31536000);

    if (interval >= 1) {
        return interval + ((interval == 1) ? " year" : " years");
    }
    interval = Math.floor(seconds / 2592000);
    if (interval >= 1) {
        return interval + ((interval == 1) ? " month" : " months");
    }
    interval = Math.floor(seconds / 86400);
    if (interval >= 1) {
        return interval + ((interval == 1) ? " day" : " days");
    }
    interval = Math.floor(seconds / 3600);
    if (interval >= 1) {
        return interval + ((interval == 1) ? " hour" : " hours");
    }
    interval = Math.floor(seconds / 60);
    if (interval >= 1) {
        return interval + ((interval == 1) ? " minute" : " minutes");
    }
    return Math.floor(seconds) + " seconds";
}

function timeSince(date) {

    var seconds = Math.floor((new Date() - date) / 1000);

    var interval = Math.floor(seconds / 31536000);

    if (interval >= 1) {
        return interval + ((interval == 1) ? " year" : " years");
    }
    interval = Math.floor(seconds / 2592000);
    if (interval >= 1) {
        return interval + ((interval == 1) ? " month" : " months");
    }
    interval = Math.floor(seconds / 86400);
    if (interval >= 1) {
        return interval + ((interval == 1) ? " day" : " days");
    }
    interval = Math.floor(seconds / 3600);
    if (interval >= 1) {
        return interval + ((interval == 1) ? " hour" : " hours");
    }
    interval = Math.floor(seconds / 60);
    if (interval >= 1) {
        return interval + ((interval == 1) ? " minute" : " minutes");
    }
    return Math.floor(seconds) + " seconds";
}
%>

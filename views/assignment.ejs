<!doctype html>
<html lang="en">
<%- include("partials/header.ejs") %>
<%- include("partials/nav.ejs") %>
<style>
    .card {
        margin-bottom: 1.5em;
    }
</style>
<body class="preload">
<div class="container-fluid pl-0 pr-0">
    <div class="row no-gutters">
        <div class="col-md-2 pr-2">
            <%- include("partials/sidebar.ejs") %>
        </div>
        <div class="col-md-10">
            <div class="container-fluid">

                <%
                const dropdown = `
                    <div class="dropdown ml-2">
                        <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
                           data-toggle="dropdown" data-boundary="viewport" aria-haspopup="true"
                           aria-expanded="false">
                            Options
                        </a>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                            <a href="/assignments/edit/${assignment._id}/assign/${(assignment.assigned) ? 'false' : 'true'}"
                               class="dropdown-item "><i class="fas fa-paper-plane mr-2"></i>${(assignment.assigned) ? 'Unassign' :
                        'Assign'} ${assignment.name}</a>
                            <a href="" class="dropdown-item"><i class="fas fa-file-archive mr-2"></i>Save as Template</a>
                           <hr>
                            <a href="/assignments/${assignment._id}/delete" class="dropdown-item text-danger"><i class="fas fa-trash-alt mr-2"></i>Delete</a>
                        </div>
                    </div>
                        `;
                let buttons = [
                    `<a href="/assignments/${assignment._id}/grades" class="mx-1">Grades</a>`,
                    dropdown];
                let binds = [{
                    name: "Tools",
                    items: [
                        {
                            action: "Generate Template",
                            link: `/template/generate/${assignment._id}`,
                            bind: "ctrl+t"
                        }]
                },{
                    name: "Edit",
                    items: [
                        {
                            action: "Unassign",
                            link: `/assignments/edit/${assignment._id}/assign/false`,
                            bind: "ctrl+shift+a"
                        },{
                            action: "Assign",
                            link: `/assignments/edit/${assignment._id}/assign/true`,
                            bind: "ctrl+a"
                        },{
                        action: "Delete Assignment",
                        link: `/assignments/${assignment._id}/delete`,
                        bind: "ctrl+shift+d"
                    }]
                }];
                %>
                <%- include("partials/title.ejs", {title: assignment.name, subtitle: `<a href="/">Dashboard</a> / <a href="/assignments">Assignments</a> / ${assignment.name}`,
                buttons: buttons, backName: "Home", backLink: "/", binds}) %>
                <div class="row no-gutters">
                    <div class="col-md-9">
                        <div class="card">
                            <div class="d-flex justify-content-between align-items-end">
                                <div>
                                    <div class="card-title">Required Files</div>
                                    <div class="card-subtitle">Files will be required for submission</div>
                                </div>
                                <form action="/assignments/edit/<%= assignment._id %>/files/add" method="post" class="">
                                    <div class="d-flex">
                                        <input type="text" class="form-control mr-3" id="name" name="name"
                                               placeholder="Filename">&nbsp;
                                        <input type="submit" class="btn btn-primary bnt-md" value="Add File">
                                    </div>
                                    <small class="text-muted">Enter multiple with comma delimitation.</small>
                                </form>
                            </div>
                            <div class="table-responsive scroll-box">
                                <table class="table ">
                                    <thead class="">
                                    <tr>
                                        <th scope="col">Filename</th>
                                        <th scope="col" style="width: 1em;">Actions</th>
                                    </tr>
                                    </thead>
                                    <tbody>
                                    <% assignment.files.forEach(file => {
                                    %>
                                        <tr>
                                            <td><%= file %></td>
                                            <td>
                                                <a href="/assignments/edit/<%= assignment._id %>/files/<%= file %>/remove">Remove</a>
                                            </td>
                                        </tr>
                                    <% }); %>
                                    <% if(assignment.files.length == 0){ %>
                                        <tr>
                                            <td>No Files</td>
                                            <td></td>
                                        </tr>
                                    <% } %>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="card">
                            <div class="d-flex justify-content-between align-items-end">
                                <div>
                                    <div class="card-title">Shared Files</div>
                                    <div class="card-subtitle">Files will included in compilation</div>
                                </div>
                                <form action="/assignments/edit/<%= assignment._id %>/file/add" method="post"
                                      enctype="multipart/form-data">
                                    <div class="d-flex pb-3 align-items-center">
                                        <div class="custom-file mr-3">
                                            <input type="file" class="custom-file-input" name="input"
                                                   id="inputGroupFile01">
                                            <label class="custom-file-label" for="inputGroupFile01"
                                                   id="inputGroupFile01Label">Choose
                                                file... (*.*)</label>
                                        </div>
                                        <input type="submit" class="btn btn-primary btn-md" value="Add Files">
                                    </div>
                                </form>
                            </div>

                            <div class="table-responsive scroll-box">
                                <table class="table ">
                                    <thead class="">
                                    <tr>
                                        <th scope="col">Filename</th>
                                        <th scope="col" style="width: 1em;">Actions</th>
                                    </tr>
                                    </thead>
                                    <tbody>
                                    <% assignment.shared_files.forEach(shared_file => {
                                    %>
                                        <tr>
                                            <td><a href="/file/<%= shared_file._id %>"><%= shared_file.name %></a></td>
                                            <td>
                                                <a href="/assignments/edit/<%= assignment._id %>/file/remove/<%= shared_file._id %>">Remove</a>
                                            </td>
                                        </tr>
                                    <% }); %>
                                    <% if(assignment.shared_files.length == 0){ %>
                                        <tr>
                                            <td>No Files</td>
                                            <td></td>
                                        </tr>
                                    <% } %>
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <div class="card">
                            <div class="d-flex justify-content-between align-items-end">
                                <div>
                                    <div class="card-title">Program Tests</div>
                                    <div class="card-subtitle">Program must pass all visible tests to be marked
                                        complete
                                    </div>
                                </div>
                                <form action="/assignments/edit/<%= assignment._id %>/tar" method="post"
                                      enctype="multipart/form-data">
                                    <div class="d-flex pb-3 align-items-center">
                                        <div class="custom-file mr-3">
                                            <input type="file" class="custom-file-input" name="input"
                                                   id="inputGroupFile01">
                                            <label class="custom-file-label border-right-1" for="inputGroupFile01"
                                                   id="inputGroupFile01Label">Choose
                                                file... (*.tar)</label>
                                        </div>
                                        <input type="submit" class="btn btn-primary" value="Add tests">
                                    </div>
                                </form>
                            </div>

                            <div class="table-responsive scroll-box">
                                <table class="table ">
                                    <thead class="">
                                    <tr>
                                        <th scope="col">Name</th>
                                        <th scope="col">Visibility</th>
                                        <th scope="col">Inputs</th>
                                        <th scope="col">Outputs</th>
                                        <th scope="col">Errors</th>
                                        <th scope="col">Arguments</th>
                                        <th scope="col">Timeout</th>
                                        <th scope="col">Exit Code</th>
                                        <th scope="col" style="width: 1em;">Actions</th>
                                    </tr>
                                    </thead>

                                    <tbody class="">
                                    <% assignment.tests.forEach(function(test){
                                    %>
                                        <tr>
                                            <td><a href="/test/<%= test._id %>"><%= test.name %></a></td>
                                            <td><%= (test.hidden) ? "Hidden" : "Visible" %></td>
                                            <td><%= test.inputs.length %></td>
                                            <td><%= (test.provided.includes("out")) ? test.outputs.length : "Not Provided" %></td>
                                            <td><%= (test.provided.includes("err")) ? test.error.length : "Not Provided" %></td>
                                            <td><%= (test.provided.includes("cmd")) ? test.arguments : "Not Provided" %></td>
                                            <td><%= (test.provided.includes("timeout")) ? `${test.timeout}ms` : "Not Provided" %></td>
                                            <td><%= (test.provided.includes("exit")) ? test.code : "Not Provided" %></td>
                                            <td>
                                                <a href="/assignments/edit/<%= assignment._id %>/test/<%= test._id %>/remove">Remove</a>
                                        </tr>
                                    <% }); %>
                                    <% if(assignment.tests.length == 0){ %>
                                        <tr>
                                            <td>No Tests</td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                    <% } %>
                                    </tbody>
                                </table>
                            </div>
                        </div>


                    </div>
                    <div class="col-md-3 pl-4">
                        <div class="card p-0">
                            <div style="padding:16px; padding-bottom: 16px;" class="d-flex justify-content-between">
                                <div>
                                    <div class="card-title"><%= (assignment.assigned) ? 'Assigned' : 'Unassigned' %></div>
                                    <div class="card-subtitle mb-0">This
                                        assignment <%= (assignment.assigned) ? 'is' : 'is not' %> visible to students.

                                    </div>
                                    <% if(assignment.files.length < 1){ %>
                                        <div class="text-danger mt-2">Must have one required file to assign.</div>
                                    <% } %>
                                    <% if(assignment.tests.length < 1){ %>
                                        <div class="text-danger mt-2">Must have one test to assign.</div>
                                    <% } %>
                                </div>
                                <div>
                                    <a href="/assignments/edit/<%= assignment._id %>/assign/<%= (assignment.assigned) ? 'false' : 'true' %>"><%= (assignment.assigned) ? 'Unassign' : 'Assign' %></a>
                                </div>
                            </div>
                        </div>
                        <div class="card p-0">
                            <div style="padding:16px; padding-bottom: 0;" class="d-flex justify-content-between">
                                <div>
                                    <div class="card-title">Settings</div>
                                    <div class="card-subtitle mb-0">Requirements for this assignment</div>
                                </div>
                                <div>
                                    <a href="#" data-toggle="modal" data-target="#settings">Edit</a>
                                </div>
                            </div>
                            <ul class="list-group list-group-flush mb-1">
                                <li class="list-group-item d-flex justify-content-between">
                                    <span>Command:</span>
                                    <%= assignment.command %>
                                </li>
                                <li class="list-group-item d-flex justify-content-between">
                                    <span>Workspaces:</span>
                                    <%= (assignment.workspaces) ? "Allowed" : "Not Allowed" %>
                                </li>
                                <li class="list-group-item d-flex justify-content-between">
                                    <span>Quick Edits:</span>
                                    <%= (assignment.quick_edits) ? "Allowed" : "Not Allowed" %>
                                </li>
                                <li class="list-group-item d-flex justify-content-between">
                                    <span>Compile Timeout:</span>
                                    <%= assignment.timeout %>ms
                                </li>
                                <li class="list-group-item d-flex justify-content-between">
                                    <span>Average Compile:</span>
                                    <%= assignment.responses.length >= 1 ? (assignment.responses.map(resp => parseFloat(resp.compile_time) || 0.0).reduce((acc, next) => acc + next) / assignment.responses.length).toFixed(2) + "ms" : "No data" %>
                                </li>
                                <li class="list-group-item d-flex justify-content-between">
                                    <span>Due Date:</span>
                                    <%= new Date(assignment.duedate).toDateString() %>
                                </li>
                                <li class="list-group-item d-flex justify-content-between">
                                    <span>Deadline:</span>
                                    <%= new Date(assignment.late).toDateString() %>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</body>
<!-- Modal -->
<div class="modal fade" id="settings" tabindex="-1" role="dialog" aria-labelledby="settingModal" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel"><i class="fas fa-cog mr-2"></i>Settings</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form method="post" action="/assignments/<%= assignment._id %>/update">
                <div class="modal-body">
                    <div class="form-group">
                        <div class="form-check">
                            <input class="form-check-input"
                                   type="checkbox" <%= assignment.workspaces ? 'checked' : '' %> id="workspaces"
                                   name="workspaces">
                            <label class="form-check-label" for="workspaces">
                                Allow Workspaces
                            </label>
                        </div>
                        <small id="emailHelp" class="form-text text-warning">WARNING: This is an acceptability
                            feature</small>
                    </div>
                    <div class="form-group">
                        <div class="form-check">
                            <input class="form-check-input"
                                   type="checkbox" <%= assignment.quick_edits ? 'checked' : '' %> id="quick_edits"
                                   name="quick_edits">
                            <label class="form-check-label" for="quickedits">
                                Allow Quick Edits
                            </label>
                        </div>
                        <small id="emailHelp" class="form-text text-muted">Allow students to edit their uploaded code in
                            workspace, then resubmit</small>
                    </div>
                    <div class="form-group">
                        <label for="number">Compile Time Timeout (in milliseconds)</label>
                        <input type="number" class="form-control w-50" min="1000" max="60000" step="500" unit="ms"
                               id="timeout" aria-describedby="timeout" name="timeout" value="<%= assignment.timeout %>">
                        <small id="emailHelp" class="form-text text-muted">This is how long the compiler waits before
                            considering a compile as an error</small>
                    </div>
                    <div class="form-group">
                        <label>Due date</label>
                        <input type="date" class="form-control" name="duedate"
                               value="<%= new Date(assignment.duedate).toISOString().substr(0, 10) %>"
                               placeholder="Date">
                        <small class="text-muted">Late assignments will be accepted but flagged as late</small>
                    </div>
                    <div class="form-group">
                        <label>Late due date</label>
                        <input type="date" class="form-control" name="late"
                               value="<%= new Date(assignment.late).toISOString().substr(0, 10) %>" placeholder="Date">
                        <small class="text-muted">Absolute cutoff for assignments</small>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" name="submit" class="btn btn-primary">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div id="newtest" class="modal fade">
    <div class="modal-dialog modal-login">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">New Test</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <form action="/assignments/edit/<%= assignment._id %>/single" method="post" enctype="multipart/form-data">
                <div class="modal-body">
                    <div class="form-group">
                        <label>Name</label>
                        <input class="form-control" name="testName" placeholder="Name">
                    </div>
                    <div class="input-group mb-3">
                        <div class="custom-file">
                            <input type="file" class="custom-file-input" name="input" id="inputGroupFile01">
                            <label class="custom-file-label" for="inputGroupFile01">t.in</label>
                        </div>
                    </div>
                    <div class="input-group mb-3">
                        <div class="custom-file">
                            <input type="file" class="custom-file-input" name="output" id="inputGroupFile01">
                            <label class="custom-file-label" for="inputGroupFile01">t.out</label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" class="btn btn-primary pull-right" value="Add Test">
                </div>
            </form>
        </div>
    </div>
</div>
</html>

<script>
    $('input[type="file"]').change((e) => {
        $(e.target).siblings("#inputGroupFile01Label").text(e.target.files[0].name);
    });
</script>

<%
function timeTill(date) {

    var seconds = Math.floor((date - new Date()) / 1000);

    var interval = Math.floor(seconds / 31536000);

    if (interval >= 1) {
        return interval + ((interval == 1) ? " year" : " years");
    }
    interval = Math.floor(seconds / 2592000);
    if (interval >= 1) {
        return interval + ((interval == 1) ? " month" : " months");
    }
    interval = Math.floor(seconds / 86400);
    if (interval >= 1) {
        return interval + ((interval == 1) ? " day" : " days");
    }
    interval = Math.floor(seconds / 3600);
    if (interval >= 1) {
        return interval + ((interval == 1) ? " hour" : " hours");
    }
    interval = Math.floor(seconds / 60);
    if (interval >= 1) {
        return interval + ((interval == 1) ? " minute" : " minutes");
    }
    return Math.floor(seconds) + " seconds";
}

function timeSince(date) {

    var seconds = Math.floor((new Date() - date) / 1000);

    var interval = Math.floor(seconds / 31536000);

    if (interval >= 1) {
        return interval + ((interval == 1) ? " year" : " years");
    }
    interval = Math.floor(seconds / 2592000);
    if (interval >= 1) {
        return interval + ((interval == 1) ? " month" : " months");
    }
    interval = Math.floor(seconds / 86400);
    if (interval >= 1) {
        return interval + ((interval == 1) ? " day" : " days");
    }
    interval = Math.floor(seconds / 3600);
    if (interval >= 1) {
        return interval + ((interval == 1) ? " hour" : " hours");
    }
    interval = Math.floor(seconds / 60);
    if (interval >= 1) {
        return interval + ((interval == 1) ? " minute" : " minutes");
    }
    return Math.floor(seconds) + " seconds";
}
%>